[{"path":"https://geomodellab.github.io/FraNchEstYN/articles/estimating_yield_loss.html","id":"goal","dir":"Articles","previous_headings":"","what":"🎯 Goal","title":"Estimating wheat yield losses from yellow rust in Egypt","text":"vignette demonstrates use FraNchEstYN estimate wheat yield losses, using real dataset yellow rust Egypt. workflow three progressive steps: Crop calibration: fit basic agronomic parameters using published trial data. Disease calibration: calibrate epidemiological parameters susceptible variety (Sids12). Varietal extension: adapt parameters varieties, adjusting Radiation Use Efficiency Varietal Resistance. Data sources include digitized observations Omara et al. (2018).","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/articles/estimating_yield_loss.html","id":"packages","dir":"Articles","previous_headings":"","what":"📦 Packages","title":"Estimating wheat yield losses from yellow rust in Egypt","text":"load FraNchEstYN plus helper libraries wrangling, visualization, reproducible tables.","code":"library(FraNchEstYN) library(tidyverse) library(kableExtra) library(plotly) library(nasapower) library(scales)"},{"path":"https://geomodellab.github.io/FraNchEstYN/articles/estimating_yield_loss.html","id":"data-loading","dir":"Articles","previous_headings":"","what":"📥 Data loading","title":"Estimating wheat yield losses from yellow rust in Egypt","text":"use three inputs: weather_data: daily NASA POWER weather Sharkiya, Egypt management_data: basic agronomic metadata (crop, sowing DOY, etc.) reference_data: measured yields disease severity several cultivars rely NASAPOWER package (maintained Adam Sparks 🙏) directly query daily weather data Sharkiya, Egypt.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/articles/estimating_yield_loss.html","id":"nasa-power-data","dir":"Articles","previous_headings":"📥 Data loading","what":"🛰 NASA Power data","title":"Estimating wheat yield losses from yellow rust in Egypt","text":"request maximum minimum temperature precipitation 2013–2015. Data tagged location date components simplify later filtering.","code":"weather_data <- nasapower::get_power(   community    = \"ag\",   lonlat       = c(31.5145167, 30.6150167),   dates        = c(\"2013-01-01\", \"2015-12-31\"),   temporal_api = \"daily\",   pars         = c(\"T2M_MAX\", \"T2M_MIN\", \"PRECTOTCORR\")) |>    rename(DATE = YYYYMMDD)  |>    mutate(     year  = year(DATE),     month = month(DATE),     day   = day(DATE),     Site  = \"Sharkiya\",     lat   = 30.6150167   ) %>%   select(Site, T2M_MAX, T2M_MIN, PRECTOTCORR, year, month, day, lat)  head(weather_data) #> ──────────────────────────────────────────────────────────────────────────────── #> ──────────────────────────────────────────────────────────────────────────────── #> ──────────────────────────────────────────────────────────────────────────────── #> # A tibble: 6 × 8 #>   Site     T2M_MAX T2M_MIN PRECTOTCORR  year month   day   lat #>   <chr>      <dbl>   <dbl>       <dbl> <dbl> <dbl> <int> <dbl> #> 1 Sharkiya    20.5    7.1         0     2013     1     1  30.6 #> 2 Sharkiya    21.4    6.21        0     2013     1     2  30.6 #> 3 Sharkiya    22.3    9.08        0.07  2013     1     3  30.6 #> 4 Sharkiya    20.8    8.06        0.05  2013     1     4  30.6 #> 5 Sharkiya    18.6    8.09        0.81  2013     1     5  30.6 #> 6 Sharkiya    18.7    7.34        0.01  2013     1     6  30.6"},{"path":"https://geomodellab.github.io/FraNchEstYN/articles/estimating_yield_loss.html","id":"disease-and-yield-data","dir":"Articles","previous_headings":"📥 Data loading","what":"📑 Disease and yield data","title":"Estimating wheat yield losses from yellow rust in Egypt","text":"dataset reference_egypt included package. contains observations disease severity, final yield, attainable yield several wheat varieties. reference_egypt — structure preview (first 6 rows)","code":"# comes with the package data(reference_egypt)"},{"path":"https://geomodellab.github.io/FraNchEstYN/articles/estimating_yield_loss.html","id":"management-data","dir":"Articles","previous_headings":"📥 Data loading","what":"🧰 Management data","title":"Estimating wheat yield losses from yellow rust in Egypt","text":"build minimal management dataset “fly”, assuming sowing date DOY 300 (≈ October 27). provides necessary metadata drive crop model. management_data — minimal setup calibration","code":"management_data <- data.frame(   crop        = \"wheat\",   variety     = \"Generic\",   resistance  = 0,        # dimensionless varietal resistance baseline   sowingDOY   = 300,      # adjust if you know the actual sowing date (DOY)   year        = \"All\",   stringsAsFactors = FALSE )  kable(management_data, caption = \"management_data — minimal setup for calibration\") |>   kableExtra::kable_styling(full_width = FALSE)"},{"path":"https://geomodellab.github.io/FraNchEstYN/articles/estimating_yield_loss.html","id":"step-1-crop-calibration","dir":"Articles","previous_headings":"","what":"🌾 Step 1 — Crop calibration","title":"Estimating wheat yield losses from yellow rust in Egypt","text":"first calibrate crop parameters , disease processes disabled. minimal calibration aligns field intensity (FINT) attainable yield observations. ➡️ Goal: adjust cycle length (harvest ≈ mid-May) attainable yield formation. resulting chart shows canopy light interception attainable yield dynamics compared measured values.","code":"# Select crop parameters for wheat thisCropParam <- FraNchEstYN::cropParameters$wheat  # Adjust cycle length to harvest around mid-May (~DOY 135) thisCropParam$CycleLength$min <- 3000 thisCropParam$CycleLength$max <- 4500  # We select the data from the most susceptible variety thisReference_egypt<-reference_egypt |>    filter(variety=='sids12')  # Calibrate only crop component df_crop <- franchestyn(   weather_data      = weather_data,   management_data   = management_data,   reference_data    = thisReference_egypt,   cropParameters    = thisCropParam,   diseaseParameters = FraNchEstYN::diseaseParameters$yellow_rust,   calibration       = \"crop\",   start_end         = c(2013, 2015),   iterations        = 999,   franchy_message   = FALSE )"},{"path":"https://geomodellab.github.io/FraNchEstYN/articles/estimating_yield_loss.html","id":"step-2-calibrating-disease-on-the-susceptible-variety-sids12","dir":"Articles","previous_headings":"","what":"🦠 Step 2 — Calibrating disease on the susceptible variety (Sids12)","title":"Estimating wheat yield losses from yellow rust in Egypt","text":"now keep calibrated crop parameters fixed, calibrate epidemiology yellow rust using Sids12. want reproduce observed disease progress curves without -fitting yield damage. Therefore: avoid overparameterization damage mechanisms, : Disable assimilate sappers, RUE reducers, senescence accelerators. Keep active light stealer mechanism (main pathway rust damage). ensures model matches observed disease severity keeping yield linked light interception. output chart overlays simulated vs observed disease severity, canopy states, actual yield. output chart overlays simulated vs observed disease severity, canopy states, actual yield.","code":"# --- use calibrated crop from Step 1 --- calibCrop <- df_crop$parameters$crop  # --- start from yellow rust defaults --- calibDisease <- FraNchEstYN::diseaseParameters$yellow_rust  # disable yield-loss pathways calibDisease$AssimilateSappersDamage$calibration <- FALSE calibDisease$AssimilateSappersDamage$value <- 0 calibDisease$RUEreducerDamage$calibration <- FALSE calibDisease$RUEreducerDamage$value <- 0 calibDisease$SenescenceAcceleratorDamage$calibration <- FALSE calibDisease$SenescenceAcceleratorDamage$value<-0  # adjust inoculum shape calibDisease$OuterInoculumShapeRelease$value <- 1  # --- run disease calibration --- dfDisease <- FraNchEstYN::franchestyn(   weather_data      = weather_data,   management_data   = management_data,   reference_data    = thisReference_egypt,   cropParameters    = calibCrop,   diseaseParameters = calibDisease,   calibration       = \"disease\",   start_end         = c(2013, 2015),   iterations        = 999 )"},{"path":"https://geomodellab.github.io/FraNchEstYN/articles/estimating_yield_loss.html","id":"step-3-extending-to-multiple-varieties","dir":"Articles","previous_headings":"","what":"🌾 Step 3 – Extending to multiple varieties","title":"Estimating wheat yield losses from yellow rust in Egypt","text":"Finally, extend calibration wheat varieties dataset. 👉 step: Disable calibration default. Enable Radiation Use Efficiency (RUE) Varietal Resistance. Run calibration loop variety. allows varietal comparisons keeping disease model unvaried. display results interactive Plotly chart, enabling zooming, tooltips, toggling variables clearer interpretation.","code":"#0. take the calibrated disease parameters calibDisease<-dfDisease$parameters$disease  # 1. disable all calibration first calibDisease <- FraNchEstYN::disable_all_calibration(calibDisease) calibCrop    <- FraNchEstYN::disable_all_calibration(calibCrop)  # 2. enable calibration only for RUE and varietal resistance calibCrop <- enable_calibration(calibCrop,                                 keys = c(\"RadiationUseEfficiency\",                                          \"VarietalResistance\"))  # containers for results all_outputs <- list()  # loop across all varieties in the reference dataset for (var in unique(reference_egypt$variety)) {   message(sprintf(\"▶️ variety: %s\", var))   thisReference_data <- reference_egypt %>% filter(variety == var)    res <- FraNchEstYN::franchestyn(     weather_data      = weather_data,     management_data   = management_data,     reference_data    = thisReference_data,     cropParameters    = calibCrop,     diseaseParameters = calibDisease,     calibration       = \"all\",     start_end         = c(2013,2015),     iterations        = 999   )    # --- extract outputs only if simulation slot exists ---   if (!is.null(res$outputs$simulation) && is.data.frame(res$outputs$simulation)) {     out_df <- res$outputs$simulation %>% mutate(Variety = var)     all_outputs[[var]] <- out_df   } }  # final binding outputs_df <- if (length(all_outputs)) bind_rows(all_outputs) else tibble()  # bind final results outputs_df <- bind_rows(all_outputs)"},{"path":"https://geomodellab.github.io/FraNchEstYN/articles/estimating_yield_loss.html","id":"key-take-home-messages","dir":"Articles","previous_headings":"","what":"📝 Key take-home messages","title":"Estimating wheat yield losses from yellow rust in Egypt","text":"FraNchEstYN successfully reproduced yellow rust severity yield losses Egypt using published trial data. Crop calibration (Step 1) focused cycle length attainable yield, disease calibration (Step 2) relied mainly light stealer mechanism match canopy-level impacts. Extending calibration multiple varieties (Step 3) required adjusting Radiation Use Efficiency Varietal Resistance, keeping epidemiology consistent across cultivars. framework outputs diagnostics, parameter estimates, simulations structured way, ready analysis visualization (including interactive Plotly plots).","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/articles/estimating_yield_loss.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"🚀 Next steps","title":"Estimating wheat yield losses from yellow rust in Egypt","text":"vignette showed calibrate wheat yield losses yellow rust Egypt using bundled datasets. , might want : 🌎 Apply environments: swap weather reference datasets different sites years. 🌾 Test crops pathogens: explore parameter sets cropParameters diseaseParameters. 🎛️ Experiment calibration scope: “” → crop + disease jointly “crop” “disease” → focus one component 📊 Assess uncertainty: run iterations replicate calibrations check stability parameter estimates. 🛠️ Extend workflow: integrate management practices, local trial data, yield-loss models impact assessment.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/articles/fitting_disease_severity.html","id":"goal","dir":"Articles","previous_headings":"","what":"🎯 Goal","title":"Fitting disease severity for *Septoria* in Indiana","text":"vignette walks process fitting Septoria tritici blotch severity data Indiana using FraNchEstYN. use example datasets bundled package: weather_indiana: daily weather data (NASA POWER) reference_indiana: digitized disease observations Shaner & Buechley (1995) management_data: sowing crop management metadata article.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/articles/fitting_disease_severity.html","id":"packages","dir":"Articles","previous_headings":"","what":"📦 Packages","title":"Fitting disease severity for *Septoria* in Indiana","text":"load FraNchEstYN package plus helper libraries data handling, tables, plotting.","code":"library(FraNchEstYN)  library(tidyverse) library(kableExtra) library(plotly)"},{"path":"https://geomodellab.github.io/FraNchEstYN/articles/fitting_disease_severity.html","id":"data-loading","dir":"Articles","previous_headings":"","what":"📥 Data loading","title":"Fitting disease severity for *Septoria* in Indiana","text":"three Indiana datasets included package. load preview rows illustrate structure. weather_indiana — daily weather (first rows) reference_indiana — disease observations management_data — management metadata (first 6 rows)","code":"data(weather_indiana) data(reference_indiana) data(management_data)"},{"path":"https://geomodellab.github.io/FraNchEstYN/articles/fitting_disease_severity.html","id":"parameters","dir":"Articles","previous_headings":"","what":"⚙️ Parameters","title":"Fitting disease severity for *Septoria* in Indiana","text":"FraNchEstYN, crop disease processes controlled parameter sets referred physiological epidemiological traits. vignette interested canopy light interception disease severity, yield formation. wheat: start defaults, disable calibration traits unrelated light interception, keep canopy dynamics active. Septoria: start defaults, disable calibration yield-loss damage mechanisms. Therefore, :","code":"# Load default parameters for wheat thisCropParam <- cropParameters$wheat  # Disable all calibration, then selectively re-enable light interception thisCropParam <- set_calibration_flags(   thisCropParam,   disable = c(\"PartitioningMaximum\",               \"TbaseCrop\", \"TmaxCrop\", \"ToptCrop\",               \"FloweringStart\",               \"RadiationUseEfficiency\") )  # Load default parameters for Septoria thisDiseaseParam <- diseaseParameters$septoria  # Disable calibration for yield-loss damage mechanisms thisDiseaseParam <- set_calibration_flags(   thisDiseaseParam,   disable = c(\"RUEreducerDamage\",               \"LightStealerDamage\",               \"SenescenceAcceleratorDamage\",               \"AssimilateSappersDamage\") )"},{"path":"https://geomodellab.github.io/FraNchEstYN/articles/fitting_disease_severity.html","id":"calibration-model-call","dir":"Articles","previous_headings":"","what":"🔧 Calibration model call","title":"Fitting disease severity for *Septoria* in Indiana","text":"data parameters prepared, can call FraNchEstYN calibration engine. fit crop disease model parameters simultaneously, using Indiana datasets. Key settings: - start_end: simulation period (1971–1992 example) - api_key: required external API calls, used - franchy_message: set FALSE silence fun messages 😉 - iterations: number optimization iterations (666 , devil’s number 👹) - calibration: scope calibration (\"\" means crop + disease) returns model object df containing diagnostics, parameters, simulation outputs.","code":"start_end <- c(1971, 1992) api_key <- \"xxx\"         # not used here for LLM franchy_message <- FALSE iterations <- 100        # the more iterations, the longer it takes but results are safer calibration <- \"all\"     # calibrate both crop and disease  df <- franchestyn(   weather_data      = weather_indiana,   management_data   = management_data,   reference_data    = reference_indiana,   cropParameters    = thisCropParam,   diseaseParameters = thisDiseaseParam,   start_end         = start_end,   calibration       = calibration,   apikey            = api_key,   franchy_message   = franchy_message,   iterations        = iterations )"},{"path":[]},{"path":"https://geomodellab.github.io/FraNchEstYN/articles/fitting_disease_severity.html","id":"parameter-plots","dir":"Articles","previous_headings":"📊 Outputs & results","what":"⚖️ Parameter plots","title":"Fitting disease severity for *Septoria* in Indiana","text":"Plots show parameter ranges, defaults, calibrated values: Black / grey lines = allowable parameter ranges 🔵 Blue vertical line = default value 🔴 Red dot = calibrated value (calibration enabled) Note: crop parameters remain defaults (blue line ), disease parameters include calibrated values.","code":"df$diagnostics$calibration$plots$crop df$diagnostics$calibration$plots$disease"},{"path":"https://geomodellab.github.io/FraNchEstYN/articles/fitting_disease_severity.html","id":"calibration-metrics-disease-severity","dir":"Articles","previous_headings":"📊 Outputs & results","what":"📏 Calibration metrics (Disease Severity)","title":"Fitting disease severity for *Septoria* in Indiana","text":"summarise calibration accuracy disease severity across seasons using Bias, MAE, RMSE, correlation, R², NSE. Calibration metrics disease severity (DisSev)","code":""},{"path":[]},{"path":"https://geomodellab.github.io/FraNchEstYN/articles/fitting_disease_severity.html","id":"season-summary","dir":"Articles","previous_headings":"📈 Simulation outputs","what":"🗂️ Season summary","title":"Fitting disease severity for *Septoria* in Indiana","text":"summary simulated disease severity","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/articles/fitting_disease_severity.html","id":"multi-season-overview-static","dir":"Articles","previous_headings":"📈 Simulation outputs","what":"🗺️️ Multi-season overview (static)","title":"Fitting disease severity for *Septoria* in Indiana","text":"Facetted plots across seasons showing dynamics inoculum, latent sporulating tissue, canopy light interception, disease severity vs. observations.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/articles/fitting_disease_severity.html","id":"deep-dive-interactive","dir":"Articles","previous_headings":"📈 Simulation outputs","what":"🎯 1972 deep-dive (interactive)","title":"Fitting disease severity for *Septoria* in Indiana","text":"interactive plot 1972 season lets us hover state variables observed values.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/articles/fitting_disease_severity.html","id":"key-take-home-messages","dir":"Articles","previous_headings":"","what":"📝 Key take-home messages","title":"Fitting disease severity for *Septoria* in Indiana","text":"FraNchEstYN successfully calibrated disease severity Septoria tritici Indiana across two decades observations. Crop parameters mostly fixed (default values) — canopy light interception active, disease parameters calibrated. framework provides diagnostics, metrics, parameter estimates, simulations consistent structure, ready analysis visualization.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/articles/fitting_disease_severity.html","id":"next-steps","dir":"Articles","previous_headings":"","what":"🚀 Next steps","title":"Fitting disease severity for *Septoria* in Indiana","text":"vignette showed calibrate Septoria tritici blotch severity Indiana using bundled datasets. , might want : 🌎 Explore environments: replace weather_indiana, reference_indiana, management_data datasets different sites years. 🌾 Switch crops pathogens: try parameter sets available cropParameters diseaseParameters. 🎛️ Experiment calibration scope: “” → calibrate crop disease models “crop” “disease” → focus one component 📊 Analyze uncertainty: increase number iterations run multiple calibration replicates assess stability parameter estimates. 🛠️ Extend pipeline: integrate management practices link outputs yield-loss models. .","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Simone Bregaglio. Author, maintainer. Roberto Ferrise. Author.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bregaglio S, Ferrise R (2025). FraNchEstYN: Crop–Disease Simulation Calibration. R package version 0.1.0, https://github.com/GeoModelLab/FraNchEstYN, https://geomodellab.github.io/FraNchEstYN.","code":"@Manual{,   title = {FraNchEstYN: Crop–Disease Simulation and Calibration},   author = {Simone Bregaglio and Roberto Ferrise},   year = {2025},   note = {R package version 0.1.0, https://github.com/GeoModelLab/FraNchEstYN},   url = {https://geomodellab.github.io/FraNchEstYN}, }"},{"path":"https://geomodellab.github.io/FraNchEstYN/index.html","id":"open_book-overview","dir":"","previous_headings":"","what":"📖 Overview","title":"FraNchEstYN","text":"FraNchEstYN crop–disease–fungicide simulation calibration framework, designed support quantitative plant disease epidemiology crop modeling research. combines process-based crop–disease model C# R interface data preprocessing, experiment setup, automated post-analysis. framework integrates: - Phenology-driven crop growth yield formation - Disease epidemiology plant–pathogen interactions damage mechanisms - Fungicide dynamics efficacy modeling - Calibration routines crop, disease, fungicide parameters - 🔮 Optional: Large Language Model (LLM) post-processor generates narrative summaries outputs (franchy_message = TRUE), using API key OpenRouter result flexible tool dynamic simulation disease severity quantify yield losses caused plant diseases different management climatic scenarios. Note: FraNchEstYN currently Windows-due C# computation core. Cross-platform support progress.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/index.html","id":"highlights","dir":"","previous_headings":"","what":"Highlights","title":"FraNchEstYN","text":"🌱 Crop growth & yield dynamics environmental drivers “genetic” modulators (parameters) 🦠 Epidemic development driven weather variables, pathogen characteristics host resistance 💊 Fungicide modeling (timing, dose, decay, efficacy classes) 🔬 Parameter calibration (\"crop\", \"disease\", \"\") automated optimization 📊 Performance metrics (RMSE, MAE, NSE, R²) calculated automatically 🖥 Hybrid architecture: R handles inputs/outputs, C# runs simulations 🧙 LLM narrative summaries results interpretation (optional)","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"FraNchEstYN","text":"Install directly GitHub (Windows ):","code":"install.packages(\"devtools\") devtools::install_github(\"GeoModelLab/FraNchEstYN\")"},{"path":"https://geomodellab.github.io/FraNchEstYN/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"FraNchEstYN","text":"Minimal run example:","code":"library(FraNchEstYN)  res <- franchestyn(   weather_data        = weather_df,      # one site only   management_data     = mgmt_df,         # crop/variety/sowing/treatments/year   reference_data      = ref_df,          # required if calibration != \"none\"   cropParameters      = cropParameters$Wheat,   diseaseParameters   = diseaseParameters$Septoria,   fungicideParameters = fungicideParameters$protectant,   calibration         = \"all\",           # \"none\", \"crop\", \"disease\", \"fungicide\", or \"all\"   start_end           = c(2010, 2020),   api_key             = \"your-openrouter-api-key\", #start with sk-or-v1-xxxxxxxxxxxxxxxxxxx....   franchy_message     = TRUE, # enables the LLM message   iterations          = 200 )  str(res$outputs$summary)"},{"path":"https://geomodellab.github.io/FraNchEstYN/index.html","id":"microscope-scientific-purpose","dir":"","previous_headings":"","what":"🔬 Scientific Purpose","title":"FraNchEstYN","text":"FraNchEstYN developed research framework : Assessing disease-induced yield reduction across environments Supporting epidemiological crop modeling experiments Testing management strategies (e.g., sowing dates, fungicide timings, resistance levels) Providing transparent reproducible modeling environment scientific community","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/index.html","id":"stethoscope-example-diagnostic-output","dir":"","previous_headings":"","what":"🩺 Example diagnostic output","title":"FraNchEstYN","text":"Running franchestyn() weather, management, crop–disease parameter inputs produce structured decision-support report. illustrative excerpt:","code":"==================== 📊 FraNchEstYN Decision-support diagnostic 📊 ==================== 🧐 OVERVIEW The crop-disease dataset reveals an average severity of approximately 65% and a mean yield of about 2905 kg/ha, with temperature ranges of Tx/Tn approximately 13.5/4.2 °C, total rainfall of around 798.6 mm, and cumulative leaf wetness of approximately 1603.8 hours, indicating critical infection windows conducive to disease development. These factors collectively inform the understanding of disease dynamics and potential  🌧️ WEATHER–DISEASE ASSOCIATIONS Weather–disease associations: rainfall (r= 0.83 ); leaf-wetness (r= 0.71 ); t max (r= -0.03 ); t min (r= 0.11 ); rh max (r= 0.42 ); rh min (r= 0.45 ).  🍄 DISEASE DYNAMICS (CALENDAR DATES) The median timings for the observed season are as follows: onset on 05/26, rapid-rise on 06/09, and peak on 07/16. The total season length is approximately 280 days.  ⚕️ FUNGICIDE PROGRAM & TIMING Apply the first spray by 05/26 to align with the onset of disease. Given the late application pattern, ensure subsequent sprays are administered every 7–10 days, with the next application by 06/09. Applications often lagged the epidemic; advance the first spray to just before onset (≈ 05/26) and avoid long gaps during the rapid increase window (≈ 06/09).  🤖 MODEL PERFORMANCE Model–observation performance: • DisSev: RMSE≈0.22, R²≈0.89 (model underestimates) • LightInterception: RMSE≈0.13, R²≈0.95 (model underestimates)  📅 YEARLY HIGHLIGHTS • 1973: 85.8% severity; 840.6 kg/ha (87.4% loss). Onset 05/17, rapid rise ~05/23, peak 07/07 (85.8%). First spray 12/12 (late) [highest severity] • 1986: 19.3% severity; 7794.5 kg/ha (1.8% loss). Onset 06/28, rapid rise ~06/28, peak 07/28 (19.3%). First spray 12/12 (late) [lowest severity] • 1989: 83.3% severity; 710.3 kg/ha (90.9% loss). Onset 05/22, rapid rise ~05/25, peak 07/15 (83.3%). First spray 12/12 (late) • 1990: 51.5% severity; 3713.1 kg/ha (50.6% loss). Onset 05/09, rapid rise ~06/09, peak 07/09 (51.5%). First spray 12/12 (late)"},{"path":"https://geomodellab.github.io/FraNchEstYN/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"FraNchEstYN","text":"Full documentation vignettes : 📚 https://geomodellab.github.io/FraNchEstYN","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"FraNchEstYN","text":"Creative Commons Attribution-NonCommercial 3.0 Unported (CC -NC 3.0)","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"FraNchEstYN","text":"Roberto Ferrise & Simone Bregaglio","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 GeoModel lab Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/calibration_toggles.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibration toggles for FraNchEstYN parameter sets — calibration_toggles","title":"Calibration toggles for FraNchEstYN parameter sets — calibration_toggles","text":"Utilities quickly disable calibration flags, enable subset, set calibration flags bulk nested parameter lists used FraNchEstYN (e.g., `cropParameters$wheat`, `diseaseParameters$septoria`). helpers enable disable `calibration` flag **leaf** parameters nested lists used FraNchEstYN (e.g., `cropParameters$wheat`, `diseaseParameters$septoria`, `fungicideParameters$protectant`).","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/calibration_toggles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibration toggles for FraNchEstYN parameter sets — calibration_toggles","text":"","code":"disable_all_calibration(params)  enable_calibration_only(   params,   keys,   match = c(\"exact\", \"regex\", \"starts_with\"),   ignore_case = TRUE,   warn_if_missing = TRUE )  set_calibration_flags(params, enable = character(), disable = character())  disable_all_calibration(params)  enable_calibration(   params,   keys,   match = c(\"exact\", \"regex\", \"starts_with\"),   ignore_case = TRUE,   warn_if_missing = TRUE )  enable_calibration_only(   params,   keys,   match = c(\"exact\", \"regex\", \"starts_with\"),   ignore_case = TRUE,   warn_if_missing = TRUE )"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/calibration_toggles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calibration toggles for FraNchEstYN parameter sets — calibration_toggles","text":"params nested parameter list (one set), e.g. `cropParameters$wheat`. may also pass entire collection (e.g., `cropParameters`), case operation applied set. keys Character vector parameter names enable/disable. Matching occurs **leaf parameter name** (e.g., `\"RelativeHumidityCritical\"`). match One `\"exact\"` (default), `\"regex\"`, `\"starts_with\"`. Controls `keys` matched parameter names. ignore_case Logical; ignore case matching (default `TRUE`). warn_if_missing Logical; `TRUE` (default), emit warning keys match parameter. enable Character vector leaf names enable. disable Character vector leaf names disable.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/calibration_toggles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calibration toggles for FraNchEstYN parameter sets — calibration_toggles","text":"modified parameter list updated `calibration` flags. modified copy `params` updated `calibration` flags.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/calibration_toggles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calibration toggles for FraNchEstYN parameter sets — calibration_toggles","text":"Parameter lists nested lists leaf least: `description`, `unit`, `min`, `max`, `value`, `calibration` (logical). leaf parameter list contains fields: `min`, `max`, `value`, `calibration`.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/calibration_toggles.html","id":"notes","dir":"Reference","previous_headings":"","what":"Notes","title":"Calibration toggles for FraNchEstYN parameter sets — calibration_toggles","text":"- Functions traverse list flip `calibration` **leaf** nodes   contain field. - Names matched exactly leaf level (partial matching).","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/calibration_toggles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calibration toggles for FraNchEstYN parameter sets — calibration_toggles","text":"","code":"# Disable all, then re-enable a few: p <- cropParameters$wheat p <- disable_all_calibration(p) p <- enable_calibration_only(   p,   keys = c(\"RadiationUseEfficiency\", \"PartitioningMaximum\") )  # Or set flags in one call: p <- set_calibration_flags(   p,   enable  = c(\"RadiationUseEfficiency\"),   disable = c(\"CycleLength\", \"TmaxCrop\") )  # Non-running examples: if (FALSE) { # \\dontrun{ # Disable all parameters for calibration in a disease set d <- disable_all_calibration(diseaseParameters$septoria)  # Re-enable a few by exact name d2 <- enable_calibration_only(   d,   keys = c(\"RelativeHumidityCritical\", \"Rain50Detachment\") )  # Enable an entire family of parameters using a regex pattern w <- cropParameters$wheat t_keys <- grep(\"^T(min|opt|max)Crop$\", names(w), value = TRUE) w2 <- set_calibration_flags(w, enable = t_keys) } # } # Disable all parameters for calibration in a disease set (not run) # d <- disable_all_calibration(diseaseParameters$septoria)  # Re-enable a few by exact name (not run) # d2 <- enable_calibration(d, c(\"RelativeHumidityCritical\", \"Rain50Detachment\"))  # Enable only a subset (disables all others) (not run) # d3 <- enable_calibration_only( #   diseaseParameters$septoria, #   keys = c(\"RelativeHumidityCritical\", \"Rain50Detachment\") # )  # Use regex to enable whole families (not run) # c2 <- enable_calibration( #   cropParameters$wheat, #   keys = c(\"^T(min|opt|max)Crop$\"), #   match = \"regex\" # )"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/compute_error_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute error metrics for model vs reference variables (internal) — compute_error_metrics","title":"Compute error metrics for model vs reference variables (internal) — compute_error_metrics","text":"Compute error metrics model vs reference variables (internal)","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/compute_error_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute error metrics for model vs reference variables (internal) — compute_error_metrics","text":"","code":"compute_error_metrics(   outputs_df,   group_cols = c(\"GrowingSeason\", \"Site\", \"Variety\", \"file\") )"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/compute_error_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute error metrics for model vs reference variables (internal) — compute_error_metrics","text":"outputs_df data.frame simulation reference columns group_cols character vector grouping columns","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/compute_error_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute error metrics for model vs reference variables (internal) — compute_error_metrics","text":"tibble one row per group/variable tibble one row per group/variable","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/cropParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Crop parameter sets for FraNchEstYN — cropParameters","title":"Crop parameter sets for FraNchEstYN — cropParameters","text":"named list predefined crop parameter sets used FraNchEstYN model. top-level names correspond crop types (e.g., `\"wheat\"`, `\"rice\"`).","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/cropParameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crop parameter sets for FraNchEstYN — cropParameters","text":"","code":"cropParameters"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/cropParameters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Crop parameter sets for FraNchEstYN — cropParameters","text":"named list crop parameter sets:   cropParameters[[crop]][[parameter]] → parameter details list.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/cropParameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Crop parameter sets for FraNchEstYN — cropParameters","text":"Structure crop set: set named list parameters. parameter list fields: description — description parameter unit — unit measurement min, max — allowed bounds value — default value calibration — logical; TRUE, parameter can optimized calibration","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/cropParameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Crop parameter sets for FraNchEstYN — cropParameters","text":"","code":"data(cropParameters) names(cropParameters)             # available crop sets #> [1] \"rice\"  \"wheat\" names(cropParameters$wheat)       # parameters in Wheat set #>  [1] \"TbaseCrop\"              \"ToptCrop\"               \"TmaxCrop\"               #>  [4] \"CycleLength\"            \"FloweringStart\"         \"HalfIntGrowth\"          #>  [7] \"HalfIntSenescence\"      \"SlopeGrowth\"            \"SlopeSenescence\"        #> [10] \"RadiationUseEfficiency\" \"PartitioningMaximum\"    \"VarietalResistance\"     cropParameters$wheat$TbaseCrop    # details for a single parameter #> $description #> [1] \"base temperature for crop growth and development\" #>  #> $unit #> [1] \"°C\" #>  #> $min #> [1] -1 #>  #> $max #> [1] 5 #>  #> $value #> [1] 1 #>  #> $calibration #> [1] TRUE #>"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/diseaseParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Disease parameter sets for FraNchEstYN — diseaseParameters","title":"Disease parameter sets for FraNchEstYN — diseaseParameters","text":"named list predefined disease parameter sets used FraNchEstYN model. top-level names correspond diseases (e.g., `\"brown_rust\"`, `\"black_rust\"`,`\"yellow_rust\"`, `\"septoria\"`).","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/diseaseParameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disease parameter sets for FraNchEstYN — diseaseParameters","text":"","code":"diseaseParameters"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/diseaseParameters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Disease parameter sets for FraNchEstYN — diseaseParameters","text":"named list disease parameter sets:   diseaseParameters[[disease]][[parameter]] → parameter details list.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/diseaseParameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Disease parameter sets for FraNchEstYN — diseaseParameters","text":"Structure disease set: set named list parameters. parameter list fields: description — description parameter unit — unit measurement min, max — allowed bounds value — default value calibration — logical; TRUE, parameter can optimized calibration","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/diseaseParameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disease parameter sets for FraNchEstYN — diseaseParameters","text":"","code":"data(diseaseParameters) names(diseaseParameters)               # available disease sets #> [1] \"black_rust\"  \"brown_rust\"  \"septoria\"    \"yellow_rust\" names(diseaseParameters$septoria)      # parameters in Septoria set #>  [1] \"IsSplashBorne\"               \"OuterInoculumMax\"            #>  [3] \"PathogenSpread\"              \"WetnessDurationOptimum\"      #>  [5] \"WetnessDurationMinimum\"      \"DryCriticalInterruption\"     #>  [7] \"Tmin\"                        \"Topt\"                        #>  [9] \"Tmax\"                        \"RelativeHumidityCritical\"    #> [11] \"Rain50Detachment\"            \"RelativeHumidityNotLimiting\" #> [13] \"HydroThermalTimeOnset\"       \"CyclePercentageOnset\"        #> [15] \"LatencyDuration\"             \"SporulationDuration\"         #> [17] \"LightStealerDamage\"          \"RUEreducerDamage\"            #> [19] \"SenescenceAcceleratorDamage\" \"AssimilateSappersDamage\"     #> [21] \"OuterInoculumShapeRelease\"   \"OuterInoculumShapeParameter\" diseaseParameters$septoria$Tmin        # details for a single parameter #> $description #> [1] \"tmin for pathogen processes\" #>  #> $unit #> [1] \"°C\" #>  #> $min #> [1] 5 #>  #> $max #> [1] 10 #>  #> $value #> [1] 7.5 #>  #> $calibration #> [1] TRUE #>"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/franchestyn.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the FraNchEstYN crop–disease simulation or calibration — franchestyn","title":"Run the FraNchEstYN crop–disease simulation or calibration — franchestyn","text":"Runs FraNchEstYN model  function prepares inputs (weather, management, parameters, reference) launches executable. Users manage paths config files manually.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/franchestyn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the FraNchEstYN crop–disease simulation or calibration — franchestyn","text":"","code":"franchestyn(   weather_data,   management_data,   reference_data = NULL,   cropParameters = NULL,   diseaseParameters = NULL,   fungicideParameters = NULL,   calibration = \"disease\",   start_end = c(2000, 2025),   apikey = NULL,   franchy_message = FALSE,   ... )"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/franchestyn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the FraNchEstYN crop–disease simulation or calibration — franchestyn","text":"weather_data data frame daily hourly weather one site .   function detect input daily hourly.   Column names matched case-insensitively, ignoring spaces, underscores, dashes. Date columns (mandatory): provide combination year, month, day (optionally hour hourly data). Meteorological variables: Mandatory: Daily inputs: tmax tx t2mmax maxtemp (max temperature, °C), tmin tn t2mmin mintemp (min temperature, °C), precipitation prec p rainfall rain (mm d-1). Hourly inputs: temp temperature t2m (air temperature, °C), precipitation prec precip prectotcorr rainfall rain(mm d-1). Radiation Latitude (one required): Radiation (rad, solar, solarrad) [MJ m⁻² d⁻¹] Latitude (lat, latitude, site_lat) [decimal degrees] radiation missing, estimated latitude day length. Optional variables (used present, estimated otherwise): Relative humidity:       rh/humidity/relhumidity/relativehumidity (hourly),       rhmax/rhx rhmin/rhn (daily) Leaf wetness: required — computed internally humidity > 90% rainfall ≥ 0.2 mm/h. management_data data frame management information site   weather_data. Column matching case-insensitive; spaces/underscores/dashes   ignored internally normalized snake_case. Required columns: crop — character (e.g., \"Wheat\"). sowingDOY — integer DOY [1, 366]. Values outside range           trigger warning. year — either ISO year (YYYY) string \"\". numeric: row applies calendar year . \"\": row treated default program years. Optional columns: treatment — character one fungicide dates separated           commas/semicolons (e.g., \"12 Feb; 28 Feb\" \"Mar 15, Apr 03\"). fungicide dates handled: Dates treatment parsed using flexible formats           (e.g., \"12 Feb\", \"Feb 12\", \"12 February\", \"February 12\"). year specific YYYY, year used parsing.           year == \"\" missing, treatments computed simulated years. reference_data optional data frame observations; **required **   calibration != \"none\". Column names matched case-insensitively   trimmed spaces; common aliases accepted (see ). Minimum requirement disease calibration (calibration %% c(\"disease\",\"crop\", \"\") Must contain disease severity column one accepted aliases:           DiseaseSeverity, dissev, disease.           Values fractional [0,1] (percent). Time alignment (recommended meaningful calibration/metrics): Year + DOY: year/yr together doy/day_of_year/dy/d. Optional observational variables (used present): Light interception: fint, f_int, lightInterception, light_int, lightinterception Biomass (AGB): agb, above_ground_biomass, biomass, abovegroundbiomass, wtop Variety/cultivar: variety, cultivar, cv Yield (attainable): YieldAttainable, YieldUnlimited, YieldPotential, Yield, wgrn, GrainYieldPotential Yield (actual): YieldActual, YieldDiseased, YieldAct, yieldact, YieldLimited, GrainYieldLimited cropParameters named list crop parameters (e.g. cropParameters$Wheat). parameter named list fields: description, unit, min, max, value, calibration (logical). Several predefined sets already included package (see data(cropParameters)). diseaseParameters named list disease parameters (e.g. diseaseParameters$Septoria), structure cropParameters. Predefined sets included package (see data(diseaseParameters)). fungicideParameters optional list fungicide parameters (e.g. fungicideParameters$protectant), structured like crop disease parameters. predefined set provided package (see data(fungicideParameters)). calibration Character. calibrate simulate: \"none\" – run simulation \"crop\" – calibrate crop model \"disease\" – calibrate disease model \"\" – calibrate crop disease model Matching case-insensitive. start_end Numeric vector length 2. Start end years simulation (default: c(2000, 2025)). Must satisfy start_end[1] <= start_end[2]. apikey Optional string. API key enabling LLM-based commentary   (used franchy_message = TRUE). provided, simulation   runs normally without AI-generated summaries. key must generated OpenRouter platform   https://openrouter.ai/. obtained, pass string, e.g.:   apikey = \"sk--v1-...\". Notes: key invalid expired, function skip LLM           commentary emit warning. franchy_message Logical. TRUE, function attempt   generate commentary end   run using Large Language Model (LLM).   Requires valid apikey https://openrouter.ai/.   Default FALSE. Notes: apikey missing, invalid, expired, commentary           generated (simulation still runs normally). Output text returned list element $spooky_message. ... Advanced options (hidden standard use). Currently supported: iterations (integer; default 100), relevant calibration != \"none\".","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/franchestyn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the FraNchEstYN crop–disease simulation or calibration — franchestyn","text":"(Invisibly) list containing structured outputs, summaries, diagnostics, updated parameters. structure includes: outputs — raw summarized simulation results: simulation: full daily simulation output data frame. summary: grouped summary GrowingSeason, Site, Variety, including: Mean daily max/min temperatures: AveTx, AveTn Mean daily max/min relative humidity: AveRHx, AveRHn Total precipitation, radiation, leaf wetness: TotalPrec, TotalRad, TotalLW AUDPC: AUDPC Max disease severity: DiseaseSeverity Max attainable actual yields: YieldAttainable, YieldActual Absolute percent yield loss: YieldLossRaw, YieldLossPerc Max AGBAttainable AGBActual diagnostics — calibration metrics visual diagnostics (calibration run): metrics: error metrics (e.g., RMSE, MAE, R²) per variable calibration: list : tables: data frames showing default calibrated parameter values bounds plots: ggplot2 facet plots comparing default vs calibrated vs bounds (crop disease) parameters — parameter lists applying calibration results (): crop: updated crop parameter list disease: updated disease parameter list spooky_message — optional text returned Frankenstein-themed LLM summary (franchy_message = TRUE apikey provided) Model output CSVs written outputs/ folder FraNchEstYN executable.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/franchestyn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run the FraNchEstYN crop–disease simulation or calibration — franchestyn","text":"- one site supported per run. - Column name matching case-insensitive tolerant spaces, underscores, dashes.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/franchestyn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the FraNchEstYN crop–disease simulation or calibration — franchestyn","text":"","code":"if (FALSE) { # \\dontrun{ # Store your OpenRouter key in an env var first, e.g.: # Sys.setenv(OPENROUTER_API_KEY = \"sk-or-v1-...\")  franchestyn(   weather_data        = weather_df,   management_data     = mgmt_df,   reference_data      = ref_df,# optional if calibration is 'none'   cropParameters      = cropParameters$wheat,   diseaseParameters   = diseaseParameters$septoria,   fungicideParameters = fungicideParameters$protectant, # optional   calibration         = 'all', # options: 'crop', 'disease', 'all'   start_end           = c(2010, 2020),   apikey              = \"your-openrouter-api-key\", # optional, start with sk-or-v1-xxxxxxxxxxxxxxxxxxx...   franchy_message     = TRUE, # optional   iterations          = 200 # optional ) } # }"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/fungicideParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Fungicide parameter sets for FraNchEstYN — fungicideParameters","title":"Fungicide parameter sets for FraNchEstYN — fungicideParameters","text":"named list predefined fungicide parameter sets used FraNchEstYN model. top-level names correspond fungicide modes classes (e.g., `\"protectant\"`).","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/fungicideParameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fungicide parameter sets for FraNchEstYN — fungicideParameters","text":"","code":"fungicideParameters"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/fungicideParameters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fungicide parameter sets for FraNchEstYN — fungicideParameters","text":"named list fungicide parameter sets:   fungicideParameters[[set]][[parameter]] → parameter details list.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/fungicideParameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fungicide parameter sets for FraNchEstYN — fungicideParameters","text":"Structure fungicide set: set named list parameters. parameter list fields: description — description parameter unit — unit measurement min, max — allowed bounds value — default value calibration — logical; TRUE, parameter can optimized calibration","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/fungicideParameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fungicide parameter sets for FraNchEstYN — fungicideParameters","text":"","code":"data(fungicideParameters) names(fungicideParameters)                   # available fungicide sets #> [1] \"protectant\" names(fungicideParameters$protectant)        # parameters in the protectant set #> [1] \"InitialDose\"     \"DegradationRate\" \"TenacityFactor\"  \"InitialEfficacy\" #> [5] \"AShapeParameter\" \"BShapeParameter\" fungicideParameters$protectant$InitialDose   # details for a single parameter #> $description #> [1] \"initial fungicide dose\" #>  #> $unit #> [1] \"fraction\" #>  #> $min #> [1] 0 #>  #> $max #> [1] 1 #>  #> $value #> [1] 1 #>  #> $calibration #> [1] FALSE #>"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/management_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Indiana management practices — management_data","title":"Indiana management practices — management_data","text":"Management metadata used FraNchEstYN pipeline Indiana sites.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/management_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Indiana management practices — management_data","text":"","code":"management_data"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/management_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Indiana management practices — management_data","text":"data frame one row per site-year combination following columns: site Character. Site identifier (always `\"Indiana\"`). crop Character. Crop grown (`\"wheat\"`). variety Character. Cultivar/variety name (`\"Generic\"`). year Integer. Calendar year management record. sowingDOY Integer. Sowing day year (1–366).","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/management_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Indiana management practices — management_data","text":"Internal CSV (`src_csharp/FraNchEstYN/FraNchEstYN/files/management/mgt_indiana.csv`). Shaner, G., Buechley, G. (1995). Epidemiology leaf blotch soft red winter wheat caused *Septoria tritici* *Stagonospora nodorum*. *Plant Disease*, 79(9), 928–938. doi:10.1094/PD-79-0928  Available https://www.apsnet.org/publications/plantdisease/backissues/Documents/1995Articles/PlantDisease79n09_928.PDF","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/management_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Indiana management practices — management_data","text":"Read `files/management/mgt_indiana.csv` stored package via `usethis::use_data(management_data, overwrite = TRUE)`. Data digitized original publication Shaner & Buechley (1995).","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/management_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Indiana management practices — management_data","text":"","code":"data(management_data) head(management_data) #>      site  crop variety year sowingDOY #> 1 Indiana wheat Generic 1972       278 #> 2 Indiana wheat Generic 1973       271 #> 3 Indiana wheat Generic 1974       275 #> 4 Indiana wheat Generic 1975       276 #> 5 Indiana wheat Generic 1976       277 #> 6 Indiana wheat Generic 1977       286"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/parameters_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a nested parameter list back into a tidy data.frame — parameters_to_df","title":"Convert a nested parameter list back into a tidy data.frame — parameters_to_df","text":"Convert nested parameter list back tidy data.frame","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/parameters_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a nested parameter list back into a tidy data.frame — parameters_to_df","text":"","code":"parameters_to_df(param_list)"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/parameters_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a nested parameter list back into a tidy data.frame — parameters_to_df","text":"param_list nested parameter list (whole model, single set)","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/parameters_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a nested parameter list back into a tidy data.frame — parameters_to_df","text":"tidy data.frame columns:   Parameter, Description, Unit, Min, Max, Value, Calibration","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/reference_egypt.html","id":null,"dir":"Reference","previous_headings":"","what":"Reference dataset for Egypt, yellow rust severity and yield loss on seven wheat varieties (Sharkiya, 2013–2015) — reference_egypt","title":"Reference dataset for Egypt, yellow rust severity and yield loss on seven wheat varieties (Sharkiya, 2013–2015) — reference_egypt","text":"dataset provides reference observations wheat stripe rust trials conducted Sharkiya, Egypt. includes disease severity assessments attainable vs. actual yield data digitized Omara et al. (2018), available [Losses Assessment Egyptian Wheat Cultivars caused Stripe Rust Pathogen *Puccinia striiformis*](https://ejp.journals.ekb.eg/article_92381_3f2e26b0341fd17294835a460fad0c50.pdf).","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/reference_egypt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reference dataset for Egypt, yellow rust severity and yield loss on seven wheat varieties (Sharkiya, 2013–2015) — reference_egypt","text":"","code":"reference_egypt"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/reference_egypt.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Reference dataset for Egypt, yellow rust severity and yield loss on seven wheat varieties (Sharkiya, 2013–2015) — reference_egypt","text":"data frame 8 variables: site Trial site (e.g. \"Sharkiya\") variety Cultivar identifier (e.g. \"sids12\") year Year trial (numeric) DOY Day year (numeric) disease Observed disease severity (%), may NA fint Field intensity score (numeric, may NA) yieldActual Measured actual yield (kg/ha) yieldAttainable Measured attainable yield (kg/ha)","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/reference_egypt.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Reference dataset for Egypt, yellow rust severity and yield loss on seven wheat varieties (Sharkiya, 2013–2015) — reference_egypt","text":"Omara et al. (2018). https://ejp.journals.ekb.eg/article_92381_3f2e26b0341fd17294835a460fad0c50.pdf","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/reference_egypt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reference dataset for Egypt, yellow rust severity and yield loss on seven wheat varieties (Sharkiya, 2013–2015) — reference_egypt","text":"","code":"data(reference_egypt) head(reference_egypt) #> # A tibble: 6 × 8 #>   site     variety  year   DOY disease  fint yieldActual yieldAttainable #>   <chr>    <chr>   <dbl> <dbl>   <dbl> <dbl>       <dbl>           <dbl> #> 1 Sharkiya sids12   2014    38       5    NA          NA              NA #> 2 Sharkiya sids12   2014    45      10    NA          NA              NA #> 3 Sharkiya sids12   2014    52      20    NA          NA              NA #> 4 Sharkiya sids12   2014    60      30    NA          NA              NA #> 5 Sharkiya sids12   2014    66      40    NA          NA              NA #> 6 Sharkiya sids12   2014    73      60    NA          NA              NA"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/reference_indiana.html","id":null,"dir":"Reference","previous_headings":"","what":"Indiana reference disease observations — reference_indiana","title":"Indiana reference disease observations — reference_indiana","text":"Plot- site-level reference observations Indiana used model calibration/validation retrospective analyses.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/reference_indiana.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Indiana reference disease observations — reference_indiana","text":"","code":"reference_indiana"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/reference_indiana.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Indiana reference disease observations — reference_indiana","text":"data frame 5 variables: site Character. Site identifier (e.g., station field name). year Integer. Calendar year (>= 1972). DOY Integer. Day year (1–366) observation. FINT Numeric. Fungal infection index (model-specific   infection/intensity metric). Disease Numeric integer. Observed disease value (e.g.,    severity incidence; unit depends study protocol).","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/reference_indiana.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Indiana reference disease observations — reference_indiana","text":"Shaner, G., Buechley, G. (1995). Epidemiology leaf blotch soft red winter wheat caused *Septoria tritici* *Stagonospora nodorum*. *Plant Disease*, 79(9), 928–938. doi:10.1094/PD-79-0928  Available https://www.apsnet.org/publications/plantdisease/backissues/Documents/1995Articles/PlantDisease79n09_928.PDF","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/reference_indiana.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Indiana reference disease observations — reference_indiana","text":"Filtered original source include records 1972 onward. Columns renamed `site` corresponds `sName` raw data. Data digitized original publication Shaner & Buechley (1995).","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/reference_indiana.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Indiana reference disease observations — reference_indiana","text":"","code":"data(reference_indiana) head(reference_indiana) #>      site year DOY FINT Disease #> 1 Indiana 1973 144 1.00      NA #> 2 Indiana 1973 187 0.25      NA #> 3 Indiana 1974 141 1.00      NA #> 4 Indiana 1974 189 0.25      NA #> 5 Indiana 1975 143 1.00      NA #> 6 Indiana 1975 188 0.25      NA"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/validate_parameter_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate parameter lists: ensure min < max — validate_parameter_ranges","title":"Validate parameter lists: ensure min < max — validate_parameter_ranges","text":"Validate parameter lists: ensure min < max","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/validate_parameter_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate parameter lists: ensure min < max — validate_parameter_ranges","text":"","code":"validate_parameter_ranges(...)"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/validate_parameter_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate parameter lists: ensure min < max — validate_parameter_ranges","text":"... Named lists parameters (e.g. cropParameters, diseaseParameters, fungicideParameters)","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/validate_parameter_ranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate parameter lists: ensure min < max — validate_parameter_ranges","text":"TRUE (invisible) checks pass, otherwise stops error","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/weather_indiana.html","id":null,"dir":"Reference","previous_headings":"","what":"Daily weather for Indiana — weather_indiana","title":"Daily weather for Indiana — weather_indiana","text":"dataset containing daily weather observations Indiana sites, sourced NASA POWER.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/weather_indiana.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Daily weather for Indiana — weather_indiana","text":"","code":"weather_indiana"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/weather_indiana.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Daily weather for Indiana — weather_indiana","text":"data frame one row per day: site Site name (always `\"Indiana\"`). year Year (numeric). month Month (1–12). day Day month (1–31). tx Daily maximum temperature (°C). tn Daily minimum temperature (°C). p Daily precipitation (mm). rad Daily global radiation (MJ m\\(^{-2}\\) d\\(^{-1}\\)).","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/weather_indiana.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Daily weather for Indiana — weather_indiana","text":"Data prepared FraNchEstYN’s bundled weather files, located `src_csharp/FraNchEstYN/FraNchEstYN/files/weather/daily/Indiana.csv`. original source NASA POWER project (https://power.larc.nasa.gov/).","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/weather_indiana.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Daily weather for Indiana — weather_indiana","text":"","code":"data(weather_indiana) dplyr::glimpse(weather_indiana) #> Rows: 7,304 #> Columns: 8 #> $ site  <chr> \"Indiana\", \"Indiana\", \"Indiana\", \"Indiana\", \"Indiana\", \"Indiana\"… #> $ year  <int> 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972, 1972… #> $ month <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ day   <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 1… #> $ tx    <dbl> 6.623, 2.450, 5.360, 1.002, -5.355, -3.036, 0.775, 4.655, 7.593,… #> $ tn    <dbl> -2.085, -3.212, -2.956, -4.786, -17.217, -13.748, -3.964, -10.63… #> $ p     <dbl> 0.000000, 3.313559, 0.000000, 5.407608, 1.776768, 0.000000, 0.00… #> $ rad   <dbl> 7.45, 9.44, 8.31, 2.37, 9.63, 9.93, 9.50, 9.51, 4.15, 9.46, 6.81…"}]
