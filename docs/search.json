[{"path":"https://geomodellab.github.io/FraNchEstYN/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Simone Bregaglio. Author, maintainer. Roberto Ferrise. Author.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bregaglio S, Ferrise R (2025). FraNchEstYN: Crop–Disease Simulation Calibration. R package version 0.1.0, https://github.com/GeoModelLab/FraNchEstYN, https://geomodellab.github.io/FraNchEstYN.","code":"@Manual{,   title = {FraNchEstYN: Crop–Disease Simulation and Calibration},   author = {Simone Bregaglio and Roberto Ferrise},   year = {2025},   note = {R package version 0.1.0, https://github.com/GeoModelLab/FraNchEstYN},   url = {https://geomodellab.github.io/FraNchEstYN}, }"},{"path":"https://geomodellab.github.io/FraNchEstYN/index.html","id":"open_book-overview","dir":"","previous_headings":"","what":"📖 Overview","title":"FraNchEstYN","text":"FraNchEstYN hybrid crop–disease–fungicide simulation calibration framework, designed support quantitative plant disease epidemiology crop modeling research. combines process-based crop–disease model C# R interface data preprocessing, experiment setup, automated post-analysis. framework integrates: - Phenology-driven crop growth yield formation - Disease epidemiology plant–pathogen interactions damage mechanisms - Fungicide dynamics efficacy modeling - Calibration routines crop, disease, fungicide parameters - 🔮 Optional: Large Language Model (LLM) post-processor generates narrative summaries outputs (franchy_message = TRUE), using API key OpenRouter result flexible tool understanding quantifying yield losses caused plant diseases different management climatic scenarios. Note: FraNchEstYN currently Windows-due C# computation core. Cross-platform support progress.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/index.html","id":"highlights","dir":"","previous_headings":"","what":"Highlights","title":"FraNchEstYN","text":"🌱 Crop growth & yield dynamics environmental drivers “genetic” modulators (parameters) 🦠 Epidemic development driven weather variables, pathogen characteristics host resistance 💊 Fungicide modeling (timing, dose, decay, efficacy classes) 🔬 Parameter calibration (\"crop\", \"disease\", \"\") automated optimization 📊 Performance metrics (RMSE, MAE, NSE, R²) calculated automatically 🖥 Hybrid architecture: R handles inputs/outputs, C# runs simulations 🧙 LLM narrative summaries results interpretation (optional)","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"FraNchEstYN","text":"Install directly GitHub (Windows ):","code":"install.packages(\"devtools\") devtools::install_github(\"GeoModelLab/FraNchEstYN\")"},{"path":"https://geomodellab.github.io/FraNchEstYN/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"FraNchEstYN","text":"Minimal run example:","code":"library(FraNchEstYN)  res <- franchestyn(   weather_data        = weather_df,      # one site only   management_data     = mgmt_df,         # crop/variety/sowing/treatments/year   reference_data      = ref_df,          # required if calibration != \"none\"   cropParameters      = cropParameters$Wheat,   diseaseParameters   = diseaseParameters$Septoria,   fungicideParameters = fungicideParameters$protectant,   calibration         = \"all\",           # \"none\", \"crop\", \"disease\", \"fungicide\", or \"all\"   start_end           = c(2010, 2020),   api_key             = \"your-openrouter-api-key\", #start with sk-or-v1-xxxxxxxxxxxxxxxxxxx....   franchy_message     = TRUE, # enables the LLM message   iterations          = 200 )  str(res$outputs$summary)"},{"path":"https://geomodellab.github.io/FraNchEstYN/index.html","id":"microscope-scientific-purpose","dir":"","previous_headings":"","what":"🔬 Scientific Purpose","title":"FraNchEstYN","text":"FraNchEstYN developed research framework : Assessing disease-induced yield reduction across environments Supporting epidemiological crop modeling experiments Testing management strategies (e.g., sowing dates, fungicide timings, resistance levels) Providing transparent reproducible modeling environment scientific community","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/index.html","id":"stethoscope-example-diagnostic-output","dir":"","previous_headings":"","what":"🩺 Example diagnostic output","title":"FraNchEstYN","text":"Running franchestyn() weather, management, crop–disease parameter inputs produce structured decision-support report. illustrative excerpt:","code":"==================== 📊 FraNchEstYN Decision-support diagnostic 📊 ==================== 🧐 OVERVIEW The crop-disease dataset reveals an average severity of approximately 65% and a mean yield of about 2905 kg/ha, with temperature ranges of Tx/Tn approximately 13.5/4.2 °C, total rainfall of around 798.6 mm, and cumulative leaf wetness of approximately 1603.8 hours, indicating critical infection windows conducive to disease development. These factors collectively inform the understanding of disease dynamics and potential  🌧️ WEATHER–DISEASE ASSOCIATIONS Weather–disease associations: rainfall (r= 0.83 ); leaf-wetness (r= 0.71 ); t max (r= -0.03 ); t min (r= 0.11 ); rh max (r= 0.42 ); rh min (r= 0.45 ).  🍄 DISEASE DYNAMICS (CALENDAR DATES) The median timings for the observed season are as follows: onset on 05/26, rapid-rise on 06/09, and peak on 07/16. The total season length is approximately 280 days.  ⚕️ FUNGICIDE PROGRAM & TIMING Apply the first spray by 05/26 to align with the onset of disease. Given the late application pattern, ensure subsequent sprays are administered every 7–10 days, with the next application by 06/09. Applications often lagged the epidemic; advance the first spray to just before onset (≈ 05/26) and avoid long gaps during the rapid increase window (≈ 06/09).  🤖 MODEL PERFORMANCE Model–observation performance: • DisSev: RMSE≈0.22, R²≈0.89 (model underestimates) • LightInterception: RMSE≈0.13, R²≈0.95 (model underestimates)  📅 YEARLY HIGHLIGHTS • 1973: 85.8% severity; 840.6 kg/ha (87.4% loss). Onset 05/17, rapid rise ~05/23, peak 07/07 (85.8%). First spray 12/12 (late) [highest severity] • 1986: 19.3% severity; 7794.5 kg/ha (1.8% loss). Onset 06/28, rapid rise ~06/28, peak 07/28 (19.3%). First spray 12/12 (late) [lowest severity] • 1989: 83.3% severity; 710.3 kg/ha (90.9% loss). Onset 05/22, rapid rise ~05/25, peak 07/15 (83.3%). First spray 12/12 (late) • 1990: 51.5% severity; 3713.1 kg/ha (50.6% loss). Onset 05/09, rapid rise ~06/09, peak 07/09 (51.5%). First spray 12/12 (late)"},{"path":"https://geomodellab.github.io/FraNchEstYN/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"FraNchEstYN","text":"Full documentation vignettes : 📚 https://geomodellab.github.io/FraNchEstYN","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"FraNchEstYN","text":"Creative Commons Attribution-NonCommercial 3.0 Unported (CC -NC 3.0)","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"FraNchEstYN","text":"Roberto Ferrise & Simone Bregaglio","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 GeoModel lab Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/calibration_toggles.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibration toggles for FraNchEstYN parameter sets — calibration_toggles","title":"Calibration toggles for FraNchEstYN parameter sets — calibration_toggles","text":"Utilities quickly disable calibration flags, enable subset, set calibration flags bulk nested parameter lists used FraNchEstYN (e.g., `cropParameters$Wheat`, `diseaseParameters$Septoria`). helpers enable disable `calibration` flag **leaf** parameters nested lists used FraNchEstYN (e.g., `cropParameters$Wheat`, `diseaseParameters$Septoria`, `fungicideParameters$protectant`).","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/calibration_toggles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibration toggles for FraNchEstYN parameter sets — calibration_toggles","text":"","code":"disable_all_calibration(params)  enable_calibration_only(   params,   keys,   match = c(\"exact\", \"regex\", \"starts_with\"),   ignore_case = TRUE,   warn_if_missing = TRUE )  set_calibration_flags(params, enable = character(), disable = character())  disable_all_calibration(params)  enable_calibration(   params,   keys,   match = c(\"exact\", \"regex\", \"starts_with\"),   ignore_case = TRUE,   warn_if_missing = TRUE )  enable_calibration_only(   params,   keys,   match = c(\"exact\", \"regex\", \"starts_with\"),   ignore_case = TRUE,   warn_if_missing = TRUE )"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/calibration_toggles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calibration toggles for FraNchEstYN parameter sets — calibration_toggles","text":"params nested parameter list (one set), e.g. `cropParameters$Wheat`. may also pass entire collection (e.g., `cropParameters`), case operation applied set. keys Character vector parameter names enable/disable. Matching occurs **leaf parameter name** (e.g., `\"RelativeHumidityCritical\"`). match One `\"exact\"` (default), `\"regex\"`, `\"starts_with\"`. Controls `keys` matched parameter names. ignore_case Logical; ignore case matching (default `TRUE`). warn_if_missing Logical; `TRUE` (default), emit warning keys match parameter. enable Character vector leaf names enable. disable Character vector leaf names disable.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/calibration_toggles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calibration toggles for FraNchEstYN parameter sets — calibration_toggles","text":"modified parameter list updated `calibration` flags. modified copy `params` updated `calibration` flags.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/calibration_toggles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calibration toggles for FraNchEstYN parameter sets — calibration_toggles","text":"Parameter lists nested lists leaf least: `description`, `unit`, `min`, `max`, `value`, `calibration` (logical). leaf parameter list contains fields: `min`, `max`, `value`, `calibration`.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/calibration_toggles.html","id":"notes","dir":"Reference","previous_headings":"","what":"Notes","title":"Calibration toggles for FraNchEstYN parameter sets — calibration_toggles","text":"- Functions traverse list flip `calibration` **leaf** nodes   contain field. - Names matched exactly leaf level (partial matching).","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/calibration_toggles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calibration toggles for FraNchEstYN parameter sets — calibration_toggles","text":"","code":"# Disable all, then re-enable a few: p <- cropParameters$Wheat p <- disable_all_calibration(p) p <- enable_calibration_only(   p,   keys = c(\"RadiationUseEfficiency\", \"PartitioningMaximum\") ) #> Error in params %>% disable_all_calibration() %>% enable_calibration(keys,     match = match, ignore_case = ignore_case, warn_if_missing = warn_if_missing): could not find function \"%>%\"  # Or set flags in one call: p <- set_calibration_flags(   p,   enable  = c(\"RadiationUseEfficiency\"),   disable = c(\"CycleLength\", \"TmaxCrop\") ) #> Warning: Calling 'structure(NULL, *)' is deprecated, as NULL cannot have attributes. #>   Consider 'structure(list(), *)' instead.  # Non-running examples: if (FALSE) { # \\dontrun{ # Disable all parameters for calibration in a disease set d <- disable_all_calibration(diseaseParameters$Septoria)  # Re-enable a few by exact name d2 <- enable_calibration_only(   d,   keys = c(\"RelativeHumidityCritical\", \"Rain50Detachment\") )  # Enable an entire family of parameters using a regex pattern w <- cropParameters$Wheat t_keys <- grep(\"^T(min|opt|max)Crop$\", names(w), value = TRUE) w2 <- set_calibration_flags(w, enable = t_keys) } # } if (FALSE) { # \\dontrun{ # Disable all parameters for calibration in a disease set d <- disable_all_calibration(diseaseParameters$Septoria)  # Re-enable a few by exact name d2 <- enable_calibration(d, c(\"RelativeHumidityCritical\", \"Rain50Detachment\"))  # Alternatively: enable only a subset (disables all others) d3 <- enable_calibration_only(   diseaseParameters$Septoria,   keys = c(\"RelativeHumidityCritical\", \"Rain50Detachment\") )  # Use regex to enable whole families c2 <- enable_calibration(   cropParameters$Wheat,   keys = c(\"^T(min|opt|max)Crop$\"),   match = \"regex\" ) } # }"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/compute_error_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute error metrics for model vs reference variables (internal) — compute_error_metrics","title":"Compute error metrics for model vs reference variables (internal) — compute_error_metrics","text":"Compute error metrics model vs reference variables (internal)","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/compute_error_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute error metrics for model vs reference variables (internal) — compute_error_metrics","text":"","code":"compute_error_metrics(   outputs_df,   group_cols = c(\"GrowingSeason\", \"Site\", \"Variety\", \"file\") )"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/compute_error_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute error metrics for model vs reference variables (internal) — compute_error_metrics","text":"outputs_df data.frame simulation reference columns group_cols character vector grouping columns","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/compute_error_metrics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute error metrics for model vs reference variables (internal) — compute_error_metrics","text":"tibble one row per group/variable tibble one row per group/variable","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/cropParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Crop parameter sets for FraNchEstYN — cropParameters","title":"Crop parameter sets for FraNchEstYN — cropParameters","text":"named list predefined crop parameter sets used FraNchEstYN model. top-level names correspond crop types (e.g., `\"wheat\"`, `\"rice\"`).","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/cropParameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crop parameter sets for FraNchEstYN — cropParameters","text":"","code":"cropParameters"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/cropParameters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Crop parameter sets for FraNchEstYN — cropParameters","text":"named list crop parameter sets:   cropParameters[[crop]][[parameter]] → parameter details list.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/cropParameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Crop parameter sets for FraNchEstYN — cropParameters","text":"Structure crop set: set named list parameters. parameter list fields: description — description parameter unit — unit measurement min, max — allowed bounds value — default value calibration — logical; TRUE, parameter can optimized calibration","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/cropParameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Crop parameter sets for FraNchEstYN — cropParameters","text":"","code":"data(cropParameters) names(cropParameters)             # available crop sets #> [1] \"rice\"  \"wheat\" names(cropParameters$wheat)       # parameters in Wheat set #>  [1] \"TbaseCrop\"              \"ToptCrop\"               \"TmaxCrop\"               #>  [4] \"CycleLength\"            \"FloweringStart\"         \"HalfIntGrowth\"          #>  [7] \"HalfIntSenescence\"      \"SlopeGrowth\"            \"SlopeSenescence\"        #> [10] \"RadiationUseEfficiency\" \"PartitioningMaximum\"    cropParameters$wheat$TbaseCrop    # details for a single parameter #> $description #> [1] \"base temperature for crop growth and development\" #>  #> $unit #> [1] \"°C\" #>  #> $min #> [1] -1 #>  #> $max #> [1] 5 #>  #> $value #> [1] 1 #>  #> $calibration #> [1] TRUE #>"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/diseaseParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Disease parameter sets for FraNchEstYN — diseaseParameters","title":"Disease parameter sets for FraNchEstYN — diseaseParameters","text":"named list predefined disease parameter sets used FraNchEstYN model. top-level names correspond diseases (e.g., `\"brown_rust\"`, `\"black_rust\"`,`\"yellow_rust\"`, `\"septoria\"`).","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/diseaseParameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disease parameter sets for FraNchEstYN — diseaseParameters","text":"","code":"diseaseParameters"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/diseaseParameters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Disease parameter sets for FraNchEstYN — diseaseParameters","text":"named list disease parameter sets:   diseaseParameters[[disease]][[parameter]] → parameter details list.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/diseaseParameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Disease parameter sets for FraNchEstYN — diseaseParameters","text":"Structure disease set: set named list parameters. parameter list fields: description — description parameter unit — unit measurement min, max — allowed bounds value — default value calibration — logical; TRUE, parameter can optimized calibration","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/diseaseParameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disease parameter sets for FraNchEstYN — diseaseParameters","text":"","code":"data(diseaseParameters) names(diseaseParameters)               # available disease sets #> [1] \"black_rust\"  \"brown_rust\"  \"septoria\"    \"yellow_rust\" names(diseaseParameters$septoria)      # parameters in Septoria set #>  [1] \"IsSplashBorne\"               \"OuterInoculumMax\"            #>  [3] \"PathogenSpread\"              \"WetnessDurationOptimum\"      #>  [5] \"WetnessDurationMinimum\"      \"DryCriticalInterruption\"     #>  [7] \"Tmin\"                        \"Topt\"                        #>  [9] \"Tmax\"                        \"RelativeHumidityCritical\"    #> [11] \"Rain50Detachment\"            \"RelativeHumidityNotLimiting\" #> [13] \"HydroThermalTimeOnset\"       \"CyclePercentageOnset\"        #> [15] \"LatencyDuration\"             \"SporulationDuration\"         #> [17] \"LightStealerDamage\"          \"RUEreducerDamage\"            #> [19] \"SenescenceAcceleratorDamage\" \"AssimilateSappersDamage\"     #> [21] \"OuterInoculumShapeRelease\"   \"OuterInoculumShapeParameter\" diseaseParameters$septoria$Tmin        # details for a single parameter #> $description #> [1] \"tmin for pathogen processes\" #>  #> $unit #> [1] \"°C\" #>  #> $min #> [1] 5 #>  #> $max #> [1] 10 #>  #> $value #> [1] 7.5 #>  #> $calibration #> [1] TRUE #>"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/franchestyn.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the FraNchEstYN crop–disease simulation or calibration — franchestyn","title":"Run the FraNchEstYN crop–disease simulation or calibration — franchestyn","text":"Runs FraNchEstYN model  function prepares inputs (weather, management, parameters, reference) launches executable. Users manage paths config files manually.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/franchestyn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the FraNchEstYN crop–disease simulation or calibration — franchestyn","text":"","code":"franchestyn(   weather_data,   management_data,   reference_data = NULL,   cropParameters = NULL,   diseaseParameters = NULL,   fungicideParameters = NULL,   calibration = \"disease\",   start_end = c(2000, 2025),   apikey = NULL,   franchy_message = FALSE,   ... )"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/franchestyn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the FraNchEstYN crop–disease simulation or calibration — franchestyn","text":"weather_data data frame daily hourly weather one site .   function detect input daily hourly.   Column names matched case-insensitively, ignoring spaces, underscores, dashes. Date columns (mandatory): provide combination year, month, day (optionally hour hourly data). Meteorological variables: Mandatory: Daily inputs: tmax (max temperature, °C), tmin (min temperature, °C), precipitation (mm d-1). Hourly inputs: temp (air temperature, °C), precipitation (mm d-1). Radiation Latitude (one required): Radiation (rad, solar, solarrad, …) [MJ m⁻² d⁻¹] Latitude (lat, latitude, phi) [decimal degrees] radiation missing, estimated latitude day length. Optional variables (used present, estimated otherwise): Relative humidity:       rh, humidity, relhumidity, relativehumidity (hourly),       rhmax/rhx rhmin/rhn (daily) Leaf wetness: required — computed internally humidity > 90% rainfall ≥ 0.2 mm/h. Unit expectations: Temperature: °C Radiation: MJ m⁻² d⁻¹; missing, estimated Precipitation: mm d⁻¹ (daily) mm h⁻¹ (hourly) Humidity: % (0–100) management_data data frame management information site   weather_data. Column matching case-insensitive; spaces/underscores/dashes   ignored internally normalized snake_case. Required columns: crop — character (e.g., \"Wheat\"). sowingDOY — integer DOY [1, 366]. Values outside range           trigger warning. year — either ISO year (YYYY) string \"\". numeric: row applies calendar year . \"\": row treated default program years. Optional columns: treatment — character one fungicide dates separated           commas/semicolons (e.g., \"12 Feb; 28 Feb\" \"Mar 15, Apr 03\"). fungicide dates handled: Dates treatment parsed using flexible formats           (e.g., \"12 Feb\", \"Feb 12\", \"12 February\", \"February 12\"). year specific YYYY, year used parsing.           year == \"\" missing, treatments computed simulated years. reference_data **optional** data frame observations; **required **   calibration != \"none\". Column names matched case-insensitively   trimmed spaces; common aliases accepted (see ). Minimum requirement disease calibration (calibration %% c(\"disease\",\"crop\", \"\") Must contain disease severity column one accepted aliases:           DiseaseSeverity, dissev, disease.           Values fractional [0,1] (percent). Time alignment (recommended meaningful calibration/metrics): Year + DOY: year/yr together doy/day_of_year/dy/d. Optional observational variables (used present): Light interception: fint, f_int, lightInterception, light_int, lightinterception Biomass (AGB): agb, above_ground_biomass, biomass, abovegroundbiomass, wtop Variety/cultivar: variety, cultivar, cv Yield (attainable): YieldAttainable, YieldUnlimited, YieldPotential, Yield, wgrn, GrainYieldPotential Yield (actual): YieldActual, YieldDiseased, YieldAct, yieldact, YieldLimited, GrainYieldLimited cropParameters named list crop parameters (e.g. cropParameters$Wheat). parameter named list fields: description, unit, min, max, value, calibration (logical). Several predefined sets already included package (see data(cropParameters)). diseaseParameters named list disease parameters (e.g. diseaseParameters$Septoria), structure cropParameters. Predefined sets included package (see data(diseaseParameters)). fungicideParameters optional list fungicide parameters (e.g. fungicideParameters$protectant), structured like crop disease parameters. predefined set provided package (see data(fungicideParameters)). calibration Character. calibrate simulate: \"none\" – run simulation \"crop\" – calibrate crop model \"disease\" – calibrate disease model \"\" – calibrate crop disease model Matching case-insensitive. start_end Numeric vector length 2. Start end years simulation (default: c(2000, 2025)). Must satisfy start_end[1] <= start_end[2]. apikey Optional string. API key enabling LLM-based commentary   (used franchy_message = TRUE). provided, simulation   runs normally without AI-generated summaries. key must generated OpenRouter platform   https://openrouter.ai/. obtained, pass string, e.g.:   apikey = \"sk--v1-...\". Notes: key invalid expired, function skip LLM           commentary emit warning. franchy_message Logical. TRUE, function attempt   generate Frankenstein-themed (\"Franchestyn-flavored\") commentary end   run using Large Language Model (LLM).   Requires valid apikey https://openrouter.ai/.   Default FALSE. Notes: apikey missing, invalid, expired, commentary           generated (simulation still runs normally). Output text returned list element $spooky_message. ... Advanced options (hidden standard use). Currently supported: iterations (integer; default 100), relevant calibration != \"none\".","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/franchestyn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the FraNchEstYN crop–disease simulation or calibration — franchestyn","text":"(Invisibly) list containing structured outputs, summaries, diagnostics, updated parameters. structure includes: outputs — raw summarized simulation results: simulation: full daily simulation output data frame. summary: grouped summary GrowingSeason, Site, Variety, including: Mean daily max/min temperatures: AveTx, AveTn Mean daily max/min relative humidity: AveRHx, AveRHn Total precipitation, radiation, leaf wetness: TotalPrec, TotalRad, TotalLW AUDPC: AUDPC Max disease severity: DiseaseSeverity Max attainable actual yields: YieldAttainable, YieldActual Absolute percent yield loss: YieldLossRaw, YieldLossPerc Max AGBAttainable AGBActual diagnostics — calibration metrics visual diagnostics (calibration run): metrics: error metrics (e.g., RMSE, MAE, R²) per variable calibration: list : tables: data frames showing default calibrated parameter values bounds plots: ggplot2 facet plots comparing default vs calibrated vs bounds (crop disease) parameters — parameter lists applying calibration results (): crop: updated crop parameter list disease: updated disease parameter list spooky_message — optional text returned Frankenstein-themed LLM summary (franchy_message = TRUE apikey provided) Model output CSVs written outputs/ folder FraNchEstYN executable.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/franchestyn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run the FraNchEstYN crop–disease simulation or calibration — franchestyn","text":"- one site supported per run. - Column name matching case-insensitive tolerant spaces, underscores, dashes.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/franchestyn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the FraNchEstYN crop–disease simulation or calibration — franchestyn","text":"","code":"if (FALSE) { # \\dontrun{ # Store your OpenRouter key in an env var first, e.g.: # Sys.setenv(OPENROUTER_API_KEY = \"sk-or-v1-...\")  franchestyn(   weather_data        = weather_df,   management_data     = mgmt_df,   reference_data      = ref_df,   cropParameters      = cropParameters$Wheat,   diseaseParameters   = diseaseParameters$Septoria,   fungicideParameters = fungicideParameters$protectant,   calibration         = \"all\",   disease             = \"Septoria\",   start_end           = c(2010, 2020),   apikey              = \"your-openrouter-api-key\", #start with sk-or-v1-xxxxxxxxxxxxxxxxxxx....   franchy_message     = TRUE,   iterations          = 200 ) } # }"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/fungicideParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Fungicide parameter sets for FraNchEstYN — fungicideParameters","title":"Fungicide parameter sets for FraNchEstYN — fungicideParameters","text":"named list predefined fungicide parameter sets used FraNchEstYN model. top-level names correspond fungicide modes classes (e.g., `\"protectant\"`).","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/fungicideParameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fungicide parameter sets for FraNchEstYN — fungicideParameters","text":"","code":"fungicideParameters"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/fungicideParameters.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Fungicide parameter sets for FraNchEstYN — fungicideParameters","text":"named list fungicide parameter sets:   fungicideParameters[[set]][[parameter]] → parameter details list.","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/fungicideParameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fungicide parameter sets for FraNchEstYN — fungicideParameters","text":"Structure fungicide set: set named list parameters. parameter list fields: description — description parameter unit — unit measurement min, max — allowed bounds value — default value calibration — logical; TRUE, parameter can optimized calibration","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/fungicideParameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fungicide parameter sets for FraNchEstYN — fungicideParameters","text":"","code":"data(fungicideParameters) names(fungicideParameters)                   # available fungicide sets #> [1] \"protectant\" names(fungicideParameters$protectant)        # parameters in the protectant set #> [1] \"InitialDose\"     \"DegradationRate\" \"TenacityFactor\"  \"InitialEfficacy\" #> [5] \"AShapeParameter\" \"BShapeParameter\" fungicideParameters$protectant$InitialDose   # details for a single parameter #> $description #> [1] \"initial fungicide dose\" #>  #> $unit #> [1] \"fraction\" #>  #> $min #> [1] 0 #>  #> $max #> [1] 1 #>  #> $value #> [1] 1 #>  #> $calibration #> [1] FALSE #>"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/validate_parameter_ranges.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate parameter lists: ensure min < max — validate_parameter_ranges","title":"Validate parameter lists: ensure min < max — validate_parameter_ranges","text":"Validate parameter lists: ensure min < max","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/validate_parameter_ranges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate parameter lists: ensure min < max — validate_parameter_ranges","text":"","code":"validate_parameter_ranges(...)"},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/validate_parameter_ranges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate parameter lists: ensure min < max — validate_parameter_ranges","text":"... Named lists parameters (e.g. cropParameters, diseaseParameters, fungicideParameters)","code":""},{"path":"https://geomodellab.github.io/FraNchEstYN/reference/validate_parameter_ranges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate parameter lists: ensure min < max — validate_parameter_ranges","text":"TRUE (invisible) checks pass, otherwise stops error","code":""}]
