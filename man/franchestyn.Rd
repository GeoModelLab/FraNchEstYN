% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Main.R
\name{franchestyn}
\alias{franchestyn}
\title{Run the FraNchEstYN crop–disease simulation or calibration}
\usage{
franchestyn(
  weather_data,
  cropModel_data = NULL,
  management_data = NULL,
  reference_data = NULL,
  cropParameters = NULL,
  diseaseParameters = NULL,
  fungicideParameters = NULL,
  calibration = "disease",
  start_end = c(2000, 2025),
  k = 0.6,
  iterations = 100,
  apikey = NULL,
  franchy_message = FALSE,
  personality = c("scientist", "extensionist", "farmer")
)
}
\arguments{
\item{weather_data}{A data frame of daily or hourly weather for \strong{one site}.
  Input frequency is auto-detected. Column names are matched case-insensitively,
  ignoring spaces, underscores, and dashes.

  \strong{Date columns (mandatory):}
  \itemize{
    \item Daily: \code{year}, \code{month}, \code{day}.
    \item Hourly: additionally \code{hour}.
  }

  \strong{Meteorological variables:}
  \itemize{
    \item Daily (mandatory): max temp (\code{tmax}, \code{tx}, etc.), min temp (\code{tmin}, \code{tn}, etc.),
          precipitation (\code{precipitation}, \code{rain}, etc.).
    \item Hourly (mandatory): air temp (\code{temp}, \code{t2m}, etc.), precipitation.
  }

  \strong{Radiation/Latitude (at least one):}
  \itemize{
    \item Radiation (\code{rad}, \code{solar}, etc.) [MJ m\eqn{^{-2}} d\eqn{^{-1}}]
    \item Latitude (\code{lat}, \code{latitude}) [decimal degrees]
  }
  Radiation will be estimated if missing but latitude is supplied.

  \strong{Optional:}
  \itemize{
    \item Relative humidity (daily \code{rhmax}/\code{rhmin}, or hourly \code{rh})
    \item Leaf wetness (computed internally from RH>90\% or rain ≥ 0.2 mm h\eqn{^{-1}})
  }}

\item{cropModel_data}{Optional crop-model output used instead of internal crop
  growth simulation. If supplied:
  \itemize{
    \item Disease calibration is enforced automatically.
    \item \code{cropParameters} are ignored.
  }

  Required columns: \code{year}, \code{doy}, \code{agb}, \code{yield},
  and either \code{fint} or \code{lai}.

  Optional: \code{gdd} / \code{thermal_time}.}

\item{management_data}{Optional data frame of management operations
  (for the same site as \code{weather_data}). Column names are normalized
  to snake_case. Required if fungicide schedules are used.

  \strong{Required columns:}
  \itemize{
    \item \code{crop} — e.g. "Wheat".
    \item \code{sowingDOY} — integer day-of-year.
    \item \code{year} — ISO year (YYYY) or \code{"All"}.
  }

  \strong{Optional:}
  \itemize{
    \item \code{treatment_1}, \code{treatment_2}, … — DOY of fungicide sprays.
  }}

\item{reference_data}{Optional data frame with observed values.
  Required if \code{calibration != "none"}. Column names are normalized.

  \strong{For disease calibration:} must include a disease severity column
  named \code{DiseaseSeverity}, \code{dissev}, or \code{disease}, with
  values in \eqn{[0,1]}.

  Recommended keys: \code{year}, \code{doy}.}

\item{cropParameters}{Nested list of crop parameters. Required unless
\code{cropModel_data} is supplied.}

\item{diseaseParameters}{Nested list of disease parameters (always required).}

\item{fungicideParameters}{Optional list of fungicide parameters.
If omitted, defaults to \code{fungicideParameters$protectant}.}

\item{calibration}{What to calibrate. One of:
\itemize{
  \item \code{"none"} — run only.
  \item \code{"crop"} — calibrate crop parameters.
  \item \code{"disease"} — calibrate disease parameters.
  \item \code{"all"} — calibrate both.
}
If \code{cropModel_data} is provided, this is forced to \code{"disease"}.}

\item{start_end}{Numeric length-2. Start and end years for simulation
(default \code{c(2000, 2025)}).}

\item{k}{Extinction coefficient for Beer’s law conversion of LAI→fInt
(default 0.6).}

\item{iterations}{Integer. Number of Monte Carlo runs (default 100).
Can also be set via \code{...}.}

\item{apikey}{Optional API key string for enabling LLM commentary
(via \url{https://openrouter.ai/}).}

\item{franchy_message}{Logical. If \code{TRUE}, generates a diagnostic
commentary block. If \code{apikey} is valid, LLM-based text is used,
otherwise rule-based summaries are returned.}

\item{personality}{Character. Style of AI-generated commentary:
\code{"scientist"}, \code{"extensionist"}, or \code{"farmer"}.}
}
\value{
A list with elements:
  \itemize{
    \item \code{outputs} — simulated time series.
    \item \code{diagnostics} — calibration diagnostics.
    \item \code{parameters} — parameter sets used.
    \item \code{decision_support_message} — optional persona-driven report.
  }
}
\description{
Prepares inputs (weather, management, crop model, parameters, reference) and
runs the FraNchEstYN model executable. Users never manage paths or config
files manually.
}
\details{
FraNchEstYN can operate standalone (with its internal crop growth routines)
or be coupled with \strong{any external crop model} by supplying
\code{cropModel_data}. In that case, crop growth dynamics (e.g. biomass,
intercepted radiation, yield) come directly from the external model, while
FraNchEstYN handles disease progression, fungicide programs, and yield loss.

Supports flexible management inputs, default or user-specified fungicide
parameterizations, and optional AI-based commentary in different
communication styles (\code{"scientist"}, \code{"extensionist"},
\code{"farmer"}).


- One site per run.
- Column matching is forgiving (case-insensitive, ignores underscores/dashes).
- If \code{calibration="none"} and \code{reference_data} is missing,
  a dummy dataset is created for compatibility.
}
\examples{
\dontrun{
franchestyn(
  weather_data        = weather_df,
  management_data     = mgmt_df,
  reference_data      = ref_df,
  cropParameters      = cropParameters$wheat,
  diseaseParameters   = diseaseParameters$septoria,
  fungicideParameters = fungicideParameters$protectant,
  calibration         = "all",
  start_end           = c(2010, 2020),
  apikey              = "sk-or-v1-xxxx",
  franchy_message     = TRUE,
  personality         = "farmer",
  iterations          = 200
)
}
}
