% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Main.R
\name{franchestyn}
\alias{franchestyn}
\title{Run the FraNchEstYN crop–disease simulation or calibration}
\usage{
franchestyn(
  weather_data,
  management_data,
  reference_data = NULL,
  cropParameters = NULL,
  diseaseParameters = NULL,
  calibration = "crop",
  disease = "Septoria",
  start_end = c(2000, 2025),
  ...
)
}
\arguments{
\item{weather_data}{A data frame for \strong{one site only} (the function stops if
multiple sites are present). A \code{Site} column (case-insensitive) is required.
Date fields must exist via any of these aliases (case-insensitive; spaces,
underscores and dashes ignored):
\itemize{
\item Year: \code{year}, \code{yr}, \code{yyyy}
\item Month: \code{month}, \code{mo}, \code{mn}
\item Day: \code{day}, \code{dy}, \code{dd}
\item Hour (only if hourly): \code{hour}, \code{hr}, \code{hh}
}
The time step is \strong{auto-detected} from column names: if any of
\code{hour}, \code{hours}, \code{hourly}, \code{hr}, \code{hod} is present
(case/space/underscore-insensitive), the model assumes \strong{hourly};
otherwise \strong{daily}. Other meteorological variables are passed through as-is.}

\item{management_data}{A data frame with management information for the same
site. Must include columns: \code{crop}, \code{variety}, \code{resistance},
\code{sowingDOY}, \code{year}. The function adds a \code{site} column
internally and writes \code{sowing.csv} for the EXE.}

\item{reference_data}{Optional data frame with observed data, \strong{required when}
\code{calibration != "none"}. Column requirements (case-insensitive; spaces,
underscores and dashes ignored) follow the C# loader:
\describe{
\item{Required date & key fields}{
\itemize{
\item \strong{Variety}: one of \code{variety}, \code{cultivar}, \code{cv}
\item \strong{Year}: one of \code{year}, \code{yr}
\item \strong{DOY}: one of \code{doy}, \code{day_of_year}, \code{dy}, \code{d}
}
Date is reconstructed as \code{as.Date(paste0(year, "-01-01")) + doy}.
}
\item{Optional measurements (read if present; empty or \code{"NA"} are skipped)}{
\itemize{
\item \strong{Light interception (fint)}: \code{fint}, \code{f_int},
\code{lightInterception}, \code{lightint}, \code{lightinterception}
\item \strong{Grain yield}: \code{yield}, \code{grain_yield}, \code{yld}, \code{wgrn}
\item \strong{Above-ground biomass (AGB)}: \code{agb},
\code{above_ground_biomass}, \code{biomass}, \code{abovegroundbiomass}, \code{wtop}
}
}
\item{Disease severity (required if \code{calibration} is \code{"disease"},
\code{"disease:NAME"}, or \code{"all"})}{
A column matching the \code{disease} argument, or
\code{"<disease>_sev"}, \code{"<disease>_severity"}.
}
}}

\item{cropParameters}{A nested list of crop parameters (typically from
\code{FraNchEstYN::cropParameters}, e.g. \code{cropParameters$Wheat}).
Each parameter is a list with fields: \code{description}, \code{unit},
\code{min}, \code{max}, \code{value}, \code{calibration} (logical).}

\item{diseaseParameters}{A nested list of disease parameters (e.g.
\code{diseaseParameters$Septoria}). Same structure as \code{cropParameters}.}

\item{calibration}{Character; target of the run. One of:
\code{"none"}, \code{"crop"}, \code{"disease"}, \code{"disease:NAME"}, \code{"all"}.
Matching is case-insensitive; \code{"disease:NAME"} overrides the \code{disease}
argument with \code{NAME}.}

\item{disease}{Character; disease name to simulate/calibrate (default
\code{"Septoria"}). If disease calibration is requested, a column with this
name (or its \code{_sev}/\code{_severity} variants) must exist in
\code{reference_data}.}

\item{start_end}{Numeric length-2 vector: start and end years
(default \code{c(2000, 2025)}). Must satisfy \code{start_end[1] <= start_end[2]}.}

\item{...}{Advanced options (not shown to typical users). Currently:
\code{iterations} (integer; default 100). Used only when
\code{calibration != "none"}; otherwise ignored.}
}
\value{
(Invisibly) a list with metadata (detected \code{timestep}, \code{mode},
\code{calibrationModel}, \code{site}, paths used, output directory). Model result
files are produced by the EXE in \code{outputs/}.
}
\description{
Runs the FraNchEstYN C# model from R. The function prepares inputs
(weather, management, parameters, reference), writes them next to the
package executable, builds a JSON config, launches the EXE, and streams
live console output (RMSE updates overwrite on one line). Users do not
manage paths or config files manually.
}
\details{
\itemize{
\item The function enforces a single site in \code{weather_data}.
\item Column name checks are case-insensitive and tolerant to spaces/underscores/dashes.
\item Input files are written under the installed package’s \code{inst/bin} tree near
\code{FraNchEstYN.exe} (weather, parameters, reference, management).
\item A JSON config is generated and passed to the EXE.
\item Previous CSV outputs in the \code{outputs} folder are removed before running.
\item Console output from the EXE is streamed live; progress lines use \code{\r} to
update in place, and the run ends with a newline + summary message.
}
}
\examples{
\dontrun{
franchestyn(
  weather_data      = weather_df,      # one site; Year/Month/Day (+ Hour if hourly)
  management_data   = mgmt_df,         # crop/variety/resistance/sowingDOY/year
  reference_data    = ref_df,          # required when calibrating
  cropParameters    = cropParameters$Wheat,
  diseaseParameters = diseaseParameters$Septoria,
  calibration       = "all",
  disease           = "Septoria",
  start_end         = c(2010, 2020),
  iterations        = 200              # via ...
)
}
}
